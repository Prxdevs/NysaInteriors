const express = require('express');
const https = require('https'); // Import the https module
const fs = require('fs'); // File system module to read SSL/TLS certificates
const morgan = require('morgan');
const mongoose = require('mongoose');
const Schema = mongoose.Schema;
const cors = require('cors');
const errorHandler = require('./build/error-handler');
const ejs = require('ejs');
const bodyParser = require('body-parser');
const session = require('express-session');
const passport = require('passport');
const flash = require('connect-flash');
const _ = require("lodash");
require('dotenv/config');
const CS = process.env.CONNECTION_STRING;
const port = process.env.PORT || 5000;

require('./build/passport')(passport);

const app = express();

const options = {
  key: fs.readFileSync('certificate/cert.key'), // Provide the path to your private key file
  cert: fs.readFileSync('certificate/cert.pem'), // Provide the path to your certificate file
};

const server = https.createServer(options, app); // Create HTTPS server

const shopRouter = require('./routers/shop');
const searchRouter = require('./routers/search');

app.use(express.json());
app.use(morgan('tiny'));
app.use(cors());
app.options('*', cors());
app.use(express.static(__dirname + '/public'));
app.use(express.static(__dirname + '/wp-content'));
app.use(errorHandler);

app.set('view engine', 'ejs');
app.set('views', 'views');

app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

app.use(session({
  secret: 'keyboard cat',
  resave: false,
  saveUninitialized: true
}));

app.use(passport.initialize());
app.use(passport.session());

app.use(flash());

app.use(function (req, res, next) {
  res.locals.success_msg = req.flash('success_msg');
  res.locals.error_msg = req.flash('error_msg');
  res.locals.error = req.flash('error');
  next();
});

app.use(`/`, shopRouter);
app.use(`/`, searchRouter);
app.use('/', require('./routers/index.js'));
app.use('/users', require('./routers/users.js'));

server.listen(port, () => {
  console.log(`The server is running on port ${port}`);
  
  mongoose.connect(CS)
    .then(() => {
      console.log('Database connection is running');
    })
    .catch((err) => {
      console.log(err);
    });
});
 